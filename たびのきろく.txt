たびのきろく


シフトアプリを作りたい！

エクセルファイルとpythonファイルをくっつけて流してしまえばよいのではないか。
（最後はgoogleスプレッドかな？）

まずエクセルに呼び出しと書きこみができるかどうかを判断！



ってことで簡易なエクセルでてすとしていこうか
読み込みはok、次は書き込み。
＝＞書き込みとかができたので。

次は実際に計休を読み込んで計算に組み込む仕様を作成していきましょうか


とりあえずrecieve.copyのここらへんでexcelを列ごとに読み込んで2次配列にすることに成功


def getHolidayReq():
    フォーマット = opxl.load_workbook(r'C:\Users\mouse\Desktop\Python\計休.xlsx')
    希望休シート = フォーマット['希望休']
    希望休リスト =[]
    for i in range(2,6):
        
        tempList = []
        
        for i2,elem in enumerate(希望休シート[i]):
            if elem.value:
                tempList.append(elem.value)
        
        希望休リスト.append(tempList)
    
    print(希望休リスト)

＝＞2時配列の先頭に名前が入ってるのでこれをどうするか問題
まぁworkMemberをそもそもエクセルからとってしまえば対応させるのもそう難しくはなさそう。


workMemberも拾えた！
ので次はholidayReqの先頭の文字列のworkmemの名前を、workmemListの位置を返して、順番を数値で取得したい！！
=>数値で取得ができたので、次。

エクセル出力ok!!!

次
=>①シフトの条件自体の追加

１．平日・休日の分類だけじゃなく、イベント等が走ってる際に調整ができるようにしたい。

とりあえず平日・休日の必要人数数を取得できるようにはした。
でも日ごとに特別に指定が必要となると、それぞれ指定していく仕組みのほうがよさそう
（休日・平日の記入がめんどくさくなるのは、excelでインプットの段階で参照などを使うして、
30個分の日付をとっておけばいいわけで）


２．祝日を取得できるようにしたい。
=> jpholidayにて対応中
=> 対応完了！！


３．特定の人が出勤しなければならない部分を入れられるようにしたい！
=>対応中
=>excelの参照を拾うと、そのセル値が返ってきてしまう問題」


=>②入力等のユーザーフォームを作れるように？
=>③早番遅番まで自動出力するように？=>これはシフト作成したあとにそっからさらに細分化したらいい気がする






#日付の部分がセル空白狭いので、そこの整形と、土日祝の色付け
#あとエクセル出力した際、条件つけれるように？、


エクセル管理が難しそうなので、GCPを使うようにしようか？？？
